<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[iOS组件化-提交组件代码到cocoapods作为框架]]></title>
    <url>%2F2018%2F06%2F28%2FiOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E6%8F%90%E4%BA%A4%E7%BB%84%E4%BB%B6%E4%BB%A3%E7%A0%81%E5%88%B0cocoapods%E4%BD%9C%E4%B8%BA%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[引言使用CocoaPods非常高效地将一些第三方类库导入到我们的项目中，给我们的开发带来了极大的便利，作为一个iOS开发者，大家肯定有自己封装的一些小组件，假如能让自己封装的组件支持pod集成，就能提供给其他开发者使用，岂不美哉。接下来将用一个Demo来演示组件化操作流程以及注意事项。 操作流程1.上传项目源码在github上创建仓库的流程我就不累述了，首先把项目源码上传到github仓库再clone到本地，如果项目本来就在github的仓库中，直接clone到本地即可，这里以CXDatePickerView为例，Demo项目地址。 2.创建项目的podspec文件用终端命令cd打开本地项目文件夹并执行如下命令:$ pod spec create CXDatePickerView这时候文件夹中就生成一个CXDatePickerView.podspec文件，可以直接用xcode打开。终端命令:open -a Xcode CXDatePickerView.podspec刚生成的文件有很多不必要的注释，可以删除，需要保留的配置字段，可以查看http://guides.cocoapods.org/syntax/podspec.html。Demo中保留了以下字段： 123456789101112131415161718192021222324Pod::Spec.new do |s| s.name = &quot;CXDatePickerView&quot; // 名称 s.version = &quot;0.1.1&quot; // 版本号 s.summary = &quot;CXDatePickerView&quot; // 简要说明 s.description = &lt;&lt;-DESC This is a custom date picker view that provides a number of modifiable UI interfaces. DESC // 功能描述 s.homepage = &quot;https://github.com/CXTretar/CXDatePickerView&quot; //项目主页 s.license = &quot;MIT&quot; // 许可证 s.author = &#123; &quot;CXTretar&quot; =&gt; &quot;misscxuan@163.com&quot; &#125; // 所有者 s.platform = :ios, &quot;8.0&quot; // 系统版本 s.source = &#123; :git =&gt; &quot;https://github.com/CXTretar/CXDatePickerView.git&quot;, :tag =&gt; s.version.to_s &#125; // 项目源地址 s.source_files = &quot;CXDatePickerView/CXDatePickerView/*.&#123;h,m&#125;&quot; // 关联的源文件 s.requires_arc = true // 是否支持ARCend 在这些字段中 s.platform 和 s.source_files 需要特别注意。s.platform 系统版本不要写的太低，不然上传到cocoapods时会因为不支持MRC而出现一些不必要的警告，在使用时也会出现多余的警告，建议填写”8.0”。s.source_files 是你要上传的组件文件夹地址，一定要是正确的路径，不然在上传到cocoapods时会出现[iOS] file patterns: The &#39;source_files&#39; pattern did not match any file.错误。填写的路径格式为 项目文件夹name/组件文件夹name/*.{h,m}，假如组件文件夹中还有其他文件夹，则为 项目文件夹name/组件文件夹name/**/*.{h,m}。 3.验证podspec文件编辑完podspec文件后需要验证该文件是否可用，podspec文件不允许有任何的Warning或者Error终端命令:$ pod lib lint如果出现123-&gt; CXDatePickerView (0.0.1)CXDatePickerView passed validation. 则说明验证通过，否则，就需要根据提示修改podspec文件再次验证直到验证通过。因为Xcode允许警告存在，所以可以通过命令屏蔽警告$ pod lib lint --allow-warnings如果出现Error但是提示信息不足，可以添加–verbose 以获取更多错误信息$ pod lib lint --verbose 4.上传podspec文件podspec文件中需要指定的tag，完成上述操作后给项目打tag12$ git tag -m&quot;release CXDatePickerView with podspec&quot; &quot;0.0.1&quot;$ git push --tags 接下来就需要将podspec文件上传至CocoaPod官方库，这里需要用到 pod trunk 账号，相信很多人都还没有注册过。这里简要说明一下注册流程： ①.终端注册trunk账号$ pod trunk register &#39;邮箱&#39; &#39;用户名&#39; --description=&#39;电脑描述&#39;例如$ pod trunk register &#39;misscxuan@163.com&#39; &#39;CXTretar&#39; --description=&#39;macbook pro&#39;注册成功的话会回复[!] Please verify the session by clicking the link in the verification email that has been sent to misscxuan@163.com ②.查收邮件如果是QQ邮箱，可能会被放到“垃圾箱”中，并不一定是“收件箱”。点击邮件中的链接：https://trunk.cocoapods.org/sessions/verify/xxxx ③.接下来查看个人信息$ pod trunk me结果信息： 12345678- Name: CXTretar- Email: misscxuan@163.com- Since: June 27th, 01:08- Pods: - CXDatePickerView- Sessions: - June 27th, 01:08 - November 3rd, 01:09. IP: xxx.xxx.xxx.xxx Description: macbook pro 到这一步就注册成功了，假如遇到 NoMethodError - undefined method &#39;last&#39; for #&lt;Netrc::Entry:0x007fc59c246378&gt; 这样的问题需要尝试更新gem源或者pod：123$ sudo gem update --system$ sudo gem install cocoapods$ sudo gem install cocospods-trunk 如果遇到 [!] Authentication token is invalid or unverified. Either verify it with the email that was sent or register a new session. 请重新再注册一次。pod trunk 设置完毕后执行终端命令:$ pod trunk push CXDatePickerView.podspec发布时可以允许警告：$ pod trunk push --allow-warnings CXDatePickerView.podspec这个过程可能会比较耗时，需要耐心等待，假如有VPN工具的话，建议开启VPN后再进行这一步。成功时会显示 123456789101112Updating spec repo `master`Validating podspec -&gt; CXDatePickerView (0.0.1) -------------------------------------------------------------------------------- 🎉 Congrats 🚀 CXDatePickerView (0.0.1) successfully published 📅 June 28th, 01:22 🌎 https://cocoapods.org/pods/CXDatePickerView 👍 Tell your friends!-------------------------------------------------------------------------------- 5.搜索组件框架此时你的组件库已经上传至cocoapods官方库中，可以这样子搜索123$ pod setup $ pod repo update$ pod search CXDatePickerView 假如搜索结果为 [!] Unable to find a pod with name, author, summary, or description matching &#39;xxxx&#39;，说明你的pod搜索库还没有更新，解决方法是通过Finder前往资源库去删除缓存中的search_index.json，路径为~/Library/Caches/CocoaPods，删除search_index.json，再重新调用 pod search CXDatePickerView 代码就能够搜索到你刚上传的组件库。 完结散花(^▽^)，希望这篇教程对你有帮助！]]></content>
      <categories>
        <category>iOS开发</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[花了点时间搞了自己的博客，感觉么么哒😘，希望能多上传点文章 ヾ(◍°∇°◍)ﾉﾞ。]]></content>
      <categories>
        <category>生活感想</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
</search>
